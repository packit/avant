"""Allow storing multiple PRs in SyncReleaseTargetModel

Revision ID: eadd57289c17
Revises: e3cfec8ce0f7
Create Date: 2025-03-17 09:00:42.332835

"""

from typing import TYPE_CHECKING

import sqlalchemy as sa
from sqlalchemy import Boolean, Column, ForeignKey, Integer, String, Table, orm
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship

from alembic import op

if TYPE_CHECKING:
    Base = object
else:
    Base = declarative_base()


# revision identifiers, used by Alembic.
revision = "eadd57289c17"
down_revision = "e3cfec8ce0f7"
branch_labels = None
depends_on = None


sync_release_pr_association_table = Table(
    "sync_release_pr_association",
    Base.metadata,  # type: ignore
    Column(
        "sync_release_target_id",
        Integer,
        ForeignKey("sync_release_run_targets.id"),
        primary_key=True,
    ),
    Column(
        "sync_release_pr_id", Integer, ForeignKey("sync_release_pull_request.id"), primary_key=True
    ),
)


class SyncReleasePullRequestModel(Base):
    __tablename__ = "sync_release_pull_request"

    id = Column(Integer, primary_key=True)
    target_branch = Column(String)
    url = Column(String)
    is_fast_forward = Column(Boolean)

    sync_release_targets = relationship("SyncReleaseTargetModel", back_populates="pull_request")


class SyncReleaseTargetModel(Base):
    __tablename__ = "sync_release_run_targets"

    id = Column(Integer, primary_key=True)
    branch = Column(String)
    downstream_pr_url = Column(String)
    downstream_pr_id = Column(Integer, ForeignKey("sync_release_pull_request.id"))

    pull_request = relationship(
        "SyncReleasePullRequestModel",
        back_populates="sync_release_targets",
    )

    pull_requests = relationship(
        "SyncReleasePullRequestModel",
        secondary=sync_release_pr_association_table,
    )


def upgrade():
    bind = op.get_bind()
    session = orm.Session(bind=bind)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sync_release_pr_association",
        sa.Column("sync_release_target_id", sa.Integer(), nullable=False),
        sa.Column("sync_release_pr_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["sync_release_pr_id"], ["sync_release_pull_request.id"]),
        sa.ForeignKeyConstraint(["sync_release_target_id"], ["sync_release_run_targets.id"]),
        sa.PrimaryKeyConstraint("sync_release_target_id", "sync_release_pr_id"),
    )
    op.add_column(
        "sync_release_pull_request", sa.Column("is_fast_forward", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "sync_release_pull_request", sa.Column("target_branch", sa.String(), nullable=True)
    )
    op.add_column("sync_release_pull_request", sa.Column("url", sa.String(), nullable=True))

    targets = session.query(SyncReleaseTargetModel).all()

    for target in targets:
        if target.pull_request:
            pr = target.pull_request
            if pr not in target.pull_requests:
                target.pull_requests.append(pr)
            pr.target_branch = target.branch
            pr.url = target.downstream_pr_url
            pr.is_fast_forward = False

    session.commit()

    # Drop the old column and constraint
    op.drop_constraint(
        "sync_release_run_targets_downstream_pr_id_fkey",
        "sync_release_run_targets",
        type_="foreignkey",
    )
    op.drop_column("sync_release_run_targets", "downstream_pr_id")
    # ### end Alembic commands ###

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "sync_release_run_targets",
        sa.Column("downstream_pr_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "sync_release_run_targets_downstream_pr_id_fkey",
        "sync_release_run_targets",
        "sync_release_pull_request",
        ["downstream_pr_id"],
        ["id"],
    )
    op.drop_column("sync_release_pull_request", "url")
    op.drop_column("sync_release_pull_request", "target_branch")
    op.drop_column("sync_release_pull_request", "is_fast_forward")
    op.drop_table("sync_release_pr_association")
    # ### end Alembic commands ###
